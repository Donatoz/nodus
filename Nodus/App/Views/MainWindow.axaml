<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Nodus.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:v="using:Nodus.App.Views"
        xmlns:fx="clr-namespace:Nodus.Core.Effects;assembly=Nodus.Core"
        xmlns:views="using:Nodus.NodeEditor.Views"
        xmlns:evm="clr-namespace:Nodus.NodeEditor.ViewModels;assembly=Nodus.NodeEditor"
        xmlns:c="clr-namespace:Nodus.Core.Controls;assembly=Nodus.Core"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Nodus.App.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        TransparencyLevelHint="AcrylicBlur"
        Icon="/Assets/avalonia-logo.ico"
        Title="Nodus">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    
    <Grid>
        <Panel Name="Container" Background="{StaticResource BackgroundDefault}">
            <!--
            <Panel.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="My item">
                        <MenuItem.Icon>
                            <fx:ShaderPresenter Width="100" Height="100" Canvas.Left="155" Canvas.Top="155"
                                                ShaderSource="avares://Nodus.Core/Assets/Shaders/Tint.glsl" 
                                                UniformsOverride="tintColor=[1,1,1]">
                                <fx:ShaderPresenter.Surface>
                                    <Image Width="100" Height="100" Source="{StaticResource TestBitmap}"/>
                                </fx:ShaderPresenter.Surface>
                            </fx:ShaderPresenter>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Panel.ContextMenu>-->
            
            <c:LoadingOverlay IsVisible="False"/>
        </Panel>
    </Grid>

    
</Window>
